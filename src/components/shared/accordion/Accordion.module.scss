@use '../../../admin/styles/globals.scss';

/* Accordion.module.scss
   - All colors and spacings use global CSS variables from globals.scss
   - Works with `.darkMode` on <html>/<body>
*/

.accordion {
  /* border-radius: var(--border-radius); */
  color: var(--text-primary);

  &.default {
    background: var(--bg-primary);
    box-shadow: var(--shadow-sm);
  }

  &.bordered {
    background: var(--bg-primary);
    border: 1px solid var(--border-color);
    box-shadow: var(--shadow-sm);
  }

  &.minimal {
    background: transparent;
    box-shadow: none;
  }

  /* Sizes -> expose CSS variables so header/content can read them */
  &.sm {
    --accordion-padding: .5rem 1rem;
    --accordion-content-padding: .5rem 1rem;
    --accordion-font-size: 14px;
  }
  &.md {
    --accordion-padding: 1rem 1.5rem;
    --accordion-content-padding: 1rem 1.5rem;
    --accordion-font-size: 15px;
  }
  &.lg {
    --accordion-padding: 1.5rem 2rem;
    --accordion-content-padding: 1.5rem 2rem;
    --accordion-font-size: 16px;
  }
}

.accordionItem {
  border-bottom: 1px solid var(--border-color);

  &:last-child { border-bottom: none; }

  &.disabled {
    opacity: 0.6;
    .accordionHeader { cursor: not-allowed; }
  }

  &.open {
    .accordionHeader {
      background: var(--primary-light);
      /* keep border subtle */
      border-bottom: 1px solid var(--border-color);
    }
  }
}

.accordionHeader {
  width: 100%;
  padding: var(--accordion-padding);
  background: transparent;
  border: none;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: space-between;
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  font-size: var(--accordion-font-size);
  text-align: left;
  color: var(--text-primary);

  &:hover:not(:disabled) { background: var(--primary-light); }

  &:focus-visible {
    outline: 2px solid var(--primary-color);
    outline-offset: 2px;
  }

  &:active:not(:disabled) { background: var(--primary-light); }
}

.accordionHeaderContent {
  display: flex;
  align-items: center;
  gap: .5rem;
  flex: 1;
}

.accordionIcon {
  color: var(--text-secondary);
  display: flex;
  align-items: center;
  justify-content: center;
  flex-shrink: 0;

  .accordionItem.open & { color: var(--primary-color); }
}

.accordionTitle {
  color: var(--text-primary);
  font-weight: 600;
  flex: 1;
  .accordionItem.open & { color: var(--primary-color); }
}

.accordionChevron {
  color: var(--text-secondary);
  transition: transform 0.2s ease, color 0.2s ease;
  flex-shrink: 0;

  &.rotated { transform: rotate(180deg); }

  .accordionItem.open & { color: var(--primary-color); }
}

.accordionContent {
  overflow: hidden;
  transition: max-height 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  max-height: 0;

  &.expanded {
    max-height: 1000px;
    overflow: visible;
  }
}

.accordionContentInner {
  padding: var(--accordion-content-padding);
  color: var(--text-secondary);
  line-height: 1.6;
  font-size: calc(var(--accordion-font-size) - 1px);

  /* make embedded SectionFilter flat inside accordion */
  :global(.sectionFilter) {
    padding: 0;
    background: transparent;
    box-shadow: none;
    border: none;
    border-radius: 0;
    margin-bottom: 0;
  }
}

.accordionActiveItems {
  background: linear-gradient(135deg, var(--success-color) 0%, var(--success-light) 40%);
  border: 1px solid var(--success-color);
  padding: .25rem .5rem;
  color: var(--success-dark);
  height: 20px;
  width: fit-content;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  border-radius: 999px;
  margin-right: 1rem;
  font-size: .75rem;
  font-weight: 700;
  box-shadow: var(--shadow-sm);
}

/* Responsive size adjustments */
@media (max-width: 768px) {
  .accordion {
    &.sm {
      --accordion-padding: .5rem;
      --accordion-content-padding: .5rem;
    }
    &.md {
      --accordion-padding: .5rem 1rem;
      --accordion-content-padding: .5rem 1rem;
    }
    &.lg {
      --accordion-padding: 1rem 1.5rem;
      --accordion-content-padding: 1rem 1.5rem;
    }
  }
}
