/* ==========================================================================
   Miscellaneous Utilities
   ========================================================================== */

@use "../variables" as v;
@use "../mixins" as m;

// Float Utilities
.float-start {
  float: left !important;
}
.float-end {
  float: right !important;
}
.float-none {
  float: none !important;
}

// Responsive Float Utilities
@each $breakpoint, $value in v.$breakpoints {
  @include m.breakpoint($breakpoint) {
    .float-#{$breakpoint}-start {
      float: left !important;
    }
    .float-#{$breakpoint}-end {
      float: right !important;
    }
    .float-#{$breakpoint}-none {
      float: none !important;
    }
  }
}

// Clearfix
.clearfix::after {
  display: block;
  clear: both;
  content: "";
}

// Screen Reader Utilities
.sr-only,
.visually-hidden {
  position: absolute !important;
  width: 1px !important;
  height: 1px !important;
  padding: 0 !important;
  margin: -1px !important;
  overflow: hidden !important;
  clip: rect(0, 0, 0, 0) !important;
  white-space: nowrap !important;
  border: 0 !important;
}

.sr-only-focusable:focus,
.visually-hidden-focusable:focus {
  position: static !important;
  width: auto !important;
  height: auto !important;
  padding: 0 !important;
  margin: 0 !important;
  overflow: visible !important;
  clip: auto !important;
  white-space: normal !important;
}

// Responsive Utilities
@media (max-width: 576px) {
  .hide-xs {
    display: none !important;
  }
}

@media (max-width: 768px) {
  .hide-sm {
    display: none !important;
  }
}

@media (max-width: 992px) {
  .hide-md {
    display: none !important;
  }
}

@media (max-width: 1200px) {
  .hide-lg {
    display: none !important;
  }
}

@media (max-width: 1400px) {
  .hide-xl {
    display: none !important;
  }
}
